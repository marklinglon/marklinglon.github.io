<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>汪茫人海</title>
  
  
  <link href="https://marklinglon.github.io/atom.xml" rel="self"/>
  
  <link href="https://marklinglon.github.io/"/>
  <updated>2023-05-26T05:53:15.898Z</updated>
  <id>https://marklinglon.github.io/</id>
  
  <author>
    <name>mark long</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>wechat gpt</title>
    <link href="https://marklinglon.github.io/2023/05/21/wechatgpt/"/>
    <id>https://marklinglon.github.io/2023/05/21/wechatgpt/</id>
    <published>2023-05-20T16:00:00.000Z</published>
    <updated>2023-05-26T05:53:15.898Z</updated>
    
    <content type="html"><![CDATA[<h1 id="下载"><a class="markdownIt-Anchor" href="#下载"></a> 下载</h1><p>git clone <a href="https://github.com/869413421/wechatbot.git">https://github.com/869413421/wechatbot.git</a></p><h1 id="进入项目目录"><a class="markdownIt-Anchor" href="#进入项目目录"></a> 进入项目目录</h1><p>cd wechatbot</p><h1 id="创建配置文件"><a class="markdownIt-Anchor" href="#创建配置文件"></a> 创建配置文件</h1><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt;  config.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">          <span class="string">&quot;api_key&quot;</span>: <span class="string">&quot;your gpt api key&quot;</span>,</span><br><span class="line">          <span class="string">&quot;auto_pass&quot;</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h1 id="启动项目"><a class="markdownIt-Anchor" href="#启动项目"></a> 启动项目</h1><p>go run main.go</p><h1 id="换账号登陆"><a class="markdownIt-Anchor" href="#换账号登陆"></a> 换账号登陆</h1><p>rm -f storage.json<br />go run main.go</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;下载&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#下载&quot;&gt;&lt;/a&gt; 下载&lt;/h1&gt;
&lt;p&gt;git clone &lt;a href=&quot;https://github.com/869413421/wechatbot.git&quot;&gt;https://g</summary>
      
    
    
    
    <category term="gpt" scheme="https://marklinglon.github.io/categories/gpt/"/>
    
    
    <category term="gpt" scheme="https://marklinglon.github.io/tags/gpt/"/>
    
  </entry>
  
  <entry>
    <title>jumpserver问题处理</title>
    <link href="https://marklinglon.github.io/2023/05/21/jumpserver/"/>
    <id>https://marklinglon.github.io/2023/05/21/jumpserver/</id>
    <published>2023-05-20T16:00:00.000Z</published>
    <updated>2023-05-29T03:44:35.295Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h1 id="登陆提示密码过期"><a class="markdownIt-Anchor" href="#登陆提示密码过期"></a> 登陆提示密码过期</h1><p>WARNING: Your password has expired.<br />You must change your password now and login again!<br />Changing password for user zeo.yang.<br />Current password:</p><h1 id="处理"><a class="markdownIt-Anchor" href="#处理"></a> 处理</h1><blockquote><ol><li>管理员登陆jumpserver</li><li>修改用户密码</li><li>用securecrt登陆该用户，发现问题依旧</li><li>chage -l 用户名 // 查看用户密码过期时间</li><li>修改宿主机的密码策略 vim /etc/login.def PASS_MAX_DAYS   99999</li><li>ansible TestCvm -m shell -a “chage -M -1 username” // 设置某个用户的密码过期时间永不过期</li></ol></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    <category term="jumpserver" scheme="https://marklinglon.github.io/categories/jumpserver/"/>
    
    
    <category term="jumpserer" scheme="https://marklinglon.github.io/tags/jumpserer/"/>
    
  </entry>
  
  <entry>
    <title>K8s文章分享</title>
    <link href="https://marklinglon.github.io/2022/03/21/share/"/>
    <id>https://marklinglon.github.io/2022/03/21/share/</id>
    <published>2022-03-20T16:00:00.000Z</published>
    <updated>2023-05-26T05:57:20.013Z</updated>
    
    <content type="html"><![CDATA[<h1 id="分享链接"><a class="markdownIt-Anchor" href="#分享链接"></a> 分享链接</h1><p>minikubeminikube部署k8s集群<a href="https://mp.weixin.qq.com/s/xHpmEZM7-kjWar_z4ADWXg">https://mp.weixin.qq.com/s/xHpmEZM7-kjWar_z4ADWXg</a><br />kubeadminkubeadmin部署k8s集群<a href="https://mp.weixin.qq.com/s/WvIg6uszw9QIkIT05cYcgQ">https://mp.weixin.qq.com/s/WvIg6uszw9QIkIT05cYcgQ</a><br />kindkind部署k8s集群<a href="https://mp.weixin.qq.com/s/YG5dNGH-T75HsXmLOQh5AA">https://mp.weixin.qq.com/s/YG5dNGH-T75HsXmLOQh5AA</a><br />rkerke部署k8s集群<a href="https://mp.weixin.qq.com/s/A4CJei7plYE9PJ2W2RRAOw">https://mp.weixin.qq.com/s/A4CJei7plYE9PJ2W2RRAOw</a><br />cephk8s私有云分布式存储搭建<a href="https://mp.weixin.qq.com/s/CdLioTzU4oWI688lqYKXUQ">https://mp.weixin.qq.com/s/CdLioTzU4oWI688lqYKXUQ</a><br />ceph-k8sk8s对接ceph<a href="https://mp.weixin.qq.com/s/lHEC83E1iKy7ojUadWNU6w">https://mp.weixin.qq.com/s/lHEC83E1iKy7ojUadWNU6w</a><br />k8sk8s自建集群<a href="https://mp.weixin.qq.com/s/473vdYANq2E_R51Lh94-9Q">https://mp.weixin.qq.com/s/473vdYANq2E_R51Lh94-9Q</a><br />k8s-multus-CNIK8s Multus CNI的部署与工作原理<a href="https://mp.weixin.qq.com/s/oSxR3ex2mnLk0qJdD6WGJg">https://mp.weixin.qq.com/s/oSxR3ex2mnLk0qJdD6WGJg</a><br />k8s-cnik8s自建cni<a href="https://mp.weixin.qq.com/s/K6ynL_9nSTLCTy0_2xCobg">https://mp.weixin.qq.com/s/K6ynL_9nSTLCTy0_2xCobg</a><br />k8s-operatoroperator最佳实践<a href="http://blazehu.com/2022/04/10/cloudnative/kubebuilder/">http://blazehu.com/2022/04/10/cloudnative/kubebuilder/</a><br />argocd/fluxArgo CD 与 Flux CD — Kubernetes 集群的正确 GitOps 工具<a href="https://mp.weixin.qq.com/s/RVmt6INalZdsGAxwRX_Veg">https://mp.weixin.qq.com/s/RVmt6INalZdsGAxwRX_Veg</a><br />prometheus云原生大型分布式监控系统(一): 大规模场景下 Prometheus 的优化手段<a href="https://mp.weixin.qq.com/s/Pd1ip05z8zxVKaAPmuKNnw">https://mp.weixin.qq.com/s/Pd1ip05z8zxVKaAPmuKNnw</a><br />prometheus云原生大型分布式监控系统(二): Thanos 架构详解<a href="https://mp.weixin.qq.com/s/oGyrJ4QiQ9KSYLuMSJnYYQ">https://mp.weixin.qq.com/s/oGyrJ4QiQ9KSYLuMSJnYYQ</a><br />prometheus云原生大型分布式监控系统(三): Thanos 部署与实践<a href="https://mp.weixin.qq.com/s/sinLteFNKGNI1-vBv28xGg">https://mp.weixin.qq.com/s/sinLteFNKGNI1-vBv28xGg</a><br />prometheus云原生大型分布式监控系统(四): Kvass+Thanos 监控超大规模容器集群<a href="https://mp.weixin.qq.com/s/gjW21wium2ZxVSBKE-hHtQ">https://mp.weixin.qq.com/s/gjW21wium2ZxVSBKE-hHtQ</a><br />kubecmKubeconfig文件自动合并-实现K8S多集群切换<a href="https://mp.weixin.qq.com/s/2f2cAWMd03AdOt2QJEapPA">https://mp.weixin.qq.com/s/2f2cAWMd03AdOt2QJEapPA</a><br />kluster-capacityK8s 集群容量 - kluster capacity<a href="https://mp.weixin.qq.com/s/6VEut9TR8Y0Y6VuurjAarw">https://mp.weixin.qq.com/s/6VEut9TR8Y0Y6VuurjAarw</a><br />k8s-schedulerK8s 调度系统由浅入深<a href="https://mp.weixin.qq.com/s/fizeaWjrtZD-EwuVQIt3ag">https://mp.weixin.qq.com/s/fizeaWjrtZD-EwuVQIt3ag</a><br />Karmada K8s 多集群管理 – Karmada 调度器<a href="https://mp.weixin.qq.com/s/OdRMAPxV1lPGhsKivSYH_Q">https://mp.weixin.qq.com/s/OdRMAPxV1lPGhsKivSYH_Q</a><br />mimirtoolprometheus瘦身工具<a href="https://mp.weixin.qq.com/s/z23gYsLIkvbBePg-FUMJXA">https://mp.weixin.qq.com/s/z23gYsLIkvbBePg-FUMJXA</a><br />Kubernetes Deschedulerk8s二次调度<a href="https://mp.weixin.qq.com/s/kfqyRgagvHWeOiTprFqH9w">https://mp.weixin.qq.com/s/kfqyRgagvHWeOiTprFqH9w</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;分享链接&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#分享链接&quot;&gt;&lt;/a&gt; 分享链接&lt;/h1&gt;
&lt;p&gt;minikube				minikube部署k8s集群						&lt;a href=&quot;https://mp.weixin.qq.com</summary>
      
    
    
    
    <category term="k8s" scheme="https://marklinglon.github.io/categories/k8s/"/>
    
    
    <category term="k8s" scheme="https://marklinglon.github.io/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>hexo部署文档</title>
    <link href="https://marklinglon.github.io/2021/01/21/hexo/"/>
    <id>https://marklinglon.github.io/2021/01/21/hexo/</id>
    <published>2021-01-20T16:00:00.000Z</published>
    <updated>2023-05-26T05:51:36.805Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># deploy前先删除public目录</span></span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><h2 id="参考链接"><a class="markdownIt-Anchor" href="#参考链接"></a> 参考链接</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>blog.cofess.com<span class="regexp">/2017/</span><span class="number">11</span><span class="regexp">/01/</span>hexo-blog-theme-pure-usage-description.html <span class="regexp">//</span> 部署文档</span><br><span class="line">http:<span class="regexp">//</span>blog.iwwee.com<span class="regexp">/posts/</span>hexo-optimize.html <span class="regexp">//</span> 优化</span><br><span class="line">https:<span class="regexp">//</span>hexo.io<span class="regexp">/zh-cn/</span>docs<span class="regexp">/syntax-highlight.html /</span><span class="regexp">/ 代码高亮</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    <category term="hexo" scheme="https://marklinglon.github.io/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://marklinglon.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Kubebuilder Webhook 开发之创建 TLS 证书</title>
    <link href="https://marklinglon.github.io/2020/06/21/kubebuilder-webhook/"/>
    <id>https://marklinglon.github.io/2020/06/21/kubebuilder-webhook/</id>
    <published>2020-06-20T16:00:00.000Z</published>
    <updated>2023-05-26T05:53:07.967Z</updated>
    
    <content type="html"><![CDATA[<p>在编写一个准入 Webhook 服务时，需要配置相关证书，k8s 提供了 api 用于对用户自主创建的证书进行认证签发。以下部分演示为 Webhook 服务创建 TLS 证书。</p><h1 id="创建-tls-证书"><a class="markdownIt-Anchor" href="#创建-tls-证书"></a> 创建 TLS 证书</h1><h2 id="创建你的证书"><a class="markdownIt-Anchor" href="#创建你的证书"></a> 创建你的证书</h2><p>通过运行以下命令生成私钥:</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF | <span class="type">cfssl</span> genkey - | <span class="type">cfssljson</span> -bare server</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;hosts&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;my-svc.my-namespace.svc.cluster.local&quot;</span>,</span><br><span class="line">    <span class="string">&quot;my-pod.my-namespace.pod.cluster.local&quot;</span>,</span><br><span class="line">    <span class="string">&quot;192.0.2.24&quot;</span>,</span><br><span class="line">    <span class="string">&quot;10.0.34.2&quot;</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;CN&quot;</span>: <span class="string">&quot;my-pod.my-namespace.pod.cluster.local&quot;</span>,</span><br><span class="line">  <span class="string">&quot;key&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;algo&quot;</span>: <span class="string">&quot;ecdsa&quot;</span>,</span><br><span class="line">    <span class="string">&quot;size&quot;</span>: <span class="number">256</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>此命令生成两个文件；它生成包含 PEM 编码 PKCS#10 证书请求的 server.csr， 以及 PEM 编码密钥的 server-key.pem，用于待生成的证书。</p><h1 id="创建证书签名请求csr"><a class="markdownIt-Anchor" href="#创建证书签名请求csr"></a> 创建证书签名请求（CSR）</h1><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">cat &lt;&lt;EOF | kubectl apply -f -</span></span><br><span class="line"><span class="attribute">apiVersion</span><span class="punctuation">:</span> <span class="string">certificates.k8s.io/v1beta1</span></span><br><span class="line"><span class="attribute">kind</span><span class="punctuation">:</span> <span class="string">CertificateSigningRequest</span></span><br><span class="line"><span class="attribute">metadata</span><span class="punctuation">:</span></span><br><span class="line">  <span class="attribute">name</span><span class="punctuation">:</span> <span class="string">example</span></span><br><span class="line"><span class="attribute">spec</span><span class="punctuation">:</span></span><br><span class="line">  <span class="attribute">request</span><span class="punctuation">:</span> <span class="string">$(cat server.csr | base64 | tr -d &#x27;\n&#x27;)</span></span><br><span class="line">  <span class="attribute">usages</span><span class="punctuation">:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">digital signature</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">key encipherment</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">server auth</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>你能看到的输出类似于：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">certificatesigningrequest<span class="selector-class">.certificates</span><span class="selector-class">.k8s</span>.io/example created</span><br></pre></td></tr></table></figure><blockquote><p>Warning: <a href="http://certificates.k8s.io/v1beta1">certificates.k8s.io/v1beta1</a> CertificateSigningRequest is deprecated in v1.19+, unavailable in v1.22+; use <a href="http://certificates.k8s.io/v1">certificates.k8s.io/v1</a> CertificateSigningRequest</p></blockquote><p>CSR 处于 Pending 状态。执行下面的命令你将可以看到：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl <span class="built_in">get</span> csr</span><br></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">NAME</span> AGE SIGNERNAME REQUESTOR CONDITION</span><br><span class="line"><span class="attribute">example</span> <span class="number">17</span>s kubernetes.io/legacy-unknown <span class="number">100015926370</span>-<span class="number">1650441195</span> Pending</span><br></pre></td></tr></table></figure><h1 id="批准证书签名请求csr"><a class="markdownIt-Anchor" href="#批准证书签名请求csr"></a> 批准证书签名请求（CSR）</h1><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">kubectl certificate approve example</span></span><br></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">certificatesigningrequest<span class="selector-class">.certificates</span><span class="selector-class">.k8s</span>.io/example approved</span><br></pre></td></tr></table></figure><h1 id="你现在应该能看到如下输出"><a class="markdownIt-Anchor" href="#你现在应该能看到如下输出"></a> 你现在应该能看到如下输出：</h1><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl <span class="built_in">get</span> csr</span><br></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">NAME</span> AGE SIGNERNAME REQUESTOR CONDITION</span><br><span class="line"><span class="attribute">example</span> <span class="number">5</span>m4s kubernetes.io/legacy-unknown <span class="number">100015926370</span>-<span class="number">1650441195</span> Approved,Issued</span><br></pre></td></tr></table></figure><h1 id="下载证书并使用它"><a class="markdownIt-Anchor" href="#下载证书并使用它"></a> 下载证书并使用它</h1><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl <span class="built_in">get</span> csr <span class="built_in">example</span> -o jsonpath=&#x27;&#123;.<span class="built_in">status</span>.certificate&#125;&#x27; | <span class="built_in">base64</span> --decode &gt; server.crt</span><br></pre></td></tr></table></figure><p>现在你可以将 server.crt 和 server-key.pem 作为你的服务的 https 认证了。</p><p>例如 kubebuilder 中使用 TLS 证书，将 server.crt 和 server-key.pem 放在 cert 目录中并修改名称为 tls.crt 和 tls.key，然后指定证书目录：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mgr, err := ctrl.NewManager(ctrl.GetConfigOrDie(), ctrl.Options<span class="punctuation">&#123;</span></span><br><span class="line"><span class="symbol">    Scheme:</span>                 scheme,</span><br><span class="line"><span class="symbol">    MetricsBindAddress:</span>     metricsAddr,</span><br><span class="line"><span class="symbol">    Port:</span>                   <span class="number">9443</span>,</span><br><span class="line"><span class="symbol">    HealthProbeBindAddress:</span> probeAddr,</span><br><span class="line"><span class="symbol">    LeaderElection:</span>         enableLeaderElection,</span><br><span class="line"><span class="symbol">    LeaderElectionID:</span>       <span class="string">&quot;27e1b0af.blazehu.com&quot;</span>,</span><br><span class="line"><span class="symbol">    CertDir:</span>                <span class="string">&quot;./cert/&quot;</span>,</span><br><span class="line"><span class="punctuation">&#125;</span>)</span><br></pre></td></tr></table></figure><h1 id="从-v1beta1-迁移到-v1"><a class="markdownIt-Anchor" href="#从-v1beta1-迁移到-v1"></a> 从 v1beta1 迁移到 v1</h1><p>上述例子使用 <a href="http://certificates.k8s.io/v1beta1">certificates.k8s.io/v1beta1</a> API 版本的 CertificateSigningRequest 不在 v1.22 版本中继续提供。官方迁移指南点这里。 我们可以使用 <a href="http://certificates.k8s.io/v1">certificates.k8s.io/v1</a> API 版本，此 API 从 v1.19 版本开始可用。</p><p>•<a href="http://certificates.k8s.io/v1">certificates.k8s.io/v1</a> 中需要额外注意的变更：<br />•对于请求证书的 API 客户端而言：<br />•spec.signerName 现在变成必需字段（参阅 已知的 Kubernetes 签署者）， 并且通过 <a href="http://certificates.k8s.io/v1">certificates.k8s.io/v1</a> API 不可以创建签署者为 <a href="http://kubernetes.io/legacy-unknown">kubernetes.io/legacy-unknown</a> 的请求<br />•spec.usages 现在变成必需字段，其中不可以包含重复的字符串值， 并且只能包含已知的用法字符串</p><h1 id="创建你的证书-2"><a class="markdownIt-Anchor" href="#创建你的证书-2"></a> 创建你的证书</h1><p>通过运行以下命令生成私钥:</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF | <span class="type">cfssl</span> genkey - | <span class="type">cfssljson</span> -bare server</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;hosts&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;my-svc.my-namespace.svc.cluster.local&quot;</span>,</span><br><span class="line">    <span class="string">&quot;my-pod.my-namespace.pod.cluster.local&quot;</span>,</span><br><span class="line">    <span class="string">&quot;192.0.2.24&quot;</span>,</span><br><span class="line">    <span class="string">&quot;10.0.34.2&quot;</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;CN&quot;</span>: <span class="string">&quot;my-pod.my-namespace.pod.cluster.local&quot;</span>,</span><br><span class="line">  <span class="string">&quot;key&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;algo&quot;</span>: <span class="string">&quot;ecdsa&quot;</span>,</span><br><span class="line">    <span class="string">&quot;size&quot;</span>: <span class="number">256</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h1 id="创建证书签名请求csr-2"><a class="markdownIt-Anchor" href="#创建证书签名请求csr-2"></a> 创建证书签名请求（CSR）</h1><p>这里 csr signerName 不能是 <a href="http://kubernetes.io/legacy-unknown%EF%BC%8C%E6%BC%94%E7%A4%BA%E6%88%91%E4%BB%AC%E9%9A%8F%E4%BE%BF%E6%8C%87%E5%AE%9A%E4%B8%80%E4%B8%AA%E4%B8%BA">kubernetes.io/legacy-unknown，演示我们随便指定一个为</a> <a href="http://example.com/serving%EF%BC%8Cv1beta1">example.com/serving，v1beta1</a> 版本默认是 <a href="http://kubernetes.io/legacy-unknown%E3%80%82">kubernetes.io/legacy-unknown。</a></p><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">cat &lt;&lt;EOF | kubectl apply -f -</span></span><br><span class="line"><span class="attribute">apiVersion</span><span class="punctuation">:</span> <span class="string">certificates.k8s.io/v1</span></span><br><span class="line"><span class="attribute">kind</span><span class="punctuation">:</span> <span class="string">CertificateSigningRequest</span></span><br><span class="line"><span class="attribute">metadata</span><span class="punctuation">:</span></span><br><span class="line">  <span class="attribute">name</span><span class="punctuation">:</span> <span class="string">example</span></span><br><span class="line"><span class="attribute">spec</span><span class="punctuation">:</span></span><br><span class="line">  <span class="attribute">request</span><span class="punctuation">:</span> <span class="string">$(cat server.csr | base64 | tr -d &#x27;\n&#x27;)</span></span><br><span class="line">  <span class="attribute">signerName</span><span class="punctuation">:</span> <span class="string">example.com/serving</span></span><br><span class="line">  <span class="attribute">usages</span><span class="punctuation">:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">digital signature</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">key encipherment</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">server auth</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h1 id="批准证书签名请求csr-2"><a class="markdownIt-Anchor" href="#批准证书签名请求csr-2"></a> 批准证书签名请求（CSR）</h1><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">kubectl certificate approve example</span></span><br></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">certificatesigningrequest<span class="selector-class">.certificates</span><span class="selector-class">.k8s</span>.io/example approved</span><br></pre></td></tr></table></figure><p>你现在应该能看到如下输出：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl <span class="built_in">get</span> csr</span><br></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">NAME</span> AGE SIGNERNAME REQUESTOR CONDITION</span><br><span class="line"><span class="attribute">example</span> <span class="number">11</span>s example.com/serving <span class="number">100015926370</span>-<span class="number">1650441195</span> Approved</span><br></pre></td></tr></table></figure><p>这里可以看到证书请求已被批准，但是没有自动签名，正在等待请求的签名者对其签名。</p><h1 id="签名证书签名请求csr"><a class="markdownIt-Anchor" href="#签名证书签名请求csr"></a> 签名证书签名请求（CSR）</h1><p>我们扮演证书签署者的角色，颁发证书并将其上传到 API 服务器。</p><h2 id="创建证书颁发机构"><a class="markdownIt-Anchor" href="#创建证书颁发机构"></a> 创建证书颁发机构</h2><p>通过运行以下命令创建签名证书:</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF | <span class="type">cfssl</span> gencert -initca - | <span class="type">cfssljson</span> -bare ca</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;CN&quot;</span>: <span class="string">&quot;example.com/serving&quot;</span>,</span><br><span class="line">  <span class="string">&quot;key&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;algo&quot;</span>: <span class="string">&quot;rsa&quot;</span>,</span><br><span class="line">    <span class="string">&quot;size&quot;</span>: <span class="number">2048</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>这会产生一个证书颁发机构密钥文件（ca-key.pem）和证书（ca.pem）。</p><h2 id="颁发证书"><a class="markdownIt-Anchor" href="#颁发证书"></a> 颁发证书</h2><p>创建文件 server-signing-config.json 内容如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;signing&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;default&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;usages&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;digital signature&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;key encipherment&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;server auth&quot;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;expiry&quot;</span><span class="punctuation">:</span> <span class="string">&quot;876000h&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;ca_constraint&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;is_ca&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>使用 server-signing-config.json 签名配置、证书颁发机构密钥文件和证书来签署证书请求：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kubectl <span class="built_in">get</span> csr example -<span class="keyword">o</span> jsonpath=<span class="string">&#x27;&#123;.spec.request&#125;&#x27;</span> | \</span><br><span class="line">base64 --decode | \</span><br><span class="line">cfssl <span class="keyword">sign</span> -<span class="keyword">ca</span> <span class="keyword">ca</span>.pem -<span class="keyword">ca</span>-key <span class="keyword">ca</span>-key.pem -config server-signing-config.json - | \</span><br><span class="line">cfssljson -bare <span class="keyword">ca</span>-signed-server</span><br></pre></td></tr></table></figure><p>这会生成一个签名的服务证书文件，ca-signed-server.pem。</p><h2 id="上传签名证书"><a class="markdownIt-Anchor" href="#上传签名证书"></a> 上传签名证书</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl get csr example -o json | \</span><br><span class="line">jq <span class="string">&#x27;.status.certificate = &quot;&#x27;</span>$(base64 ca-signed-server.pem | tr -d <span class="string">&#x27;\n&#x27;</span>)<span class="string">&#x27;&quot;&#x27;</span> | \</span><br><span class="line">kubectl replace --raw <span class="regexp">/apis/</span>certificates.k8s.io<span class="regexp">/v1/</span>certificatesigningrequests<span class="regexp">/example/</span>status -f -</span><br></pre></td></tr></table></figure><p>批准 CSR 并上传签名证书后，你现在应该能看到如下输出：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl <span class="built_in">get</span> csr</span><br></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">NAME</span> AGE SIGNERNAME REQUESTOR CONDITION</span><br><span class="line"><span class="attribute">example</span> <span class="number">10</span>m example.com/serving <span class="number">100015926370</span>-<span class="number">1650441195</span> Approved,Issued</span><br></pre></td></tr></table></figure><p>这是你可以正常下载证书并使用它了。</p><h1 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h1><p>•<a href="https://kubernetes.io/zh-cn/docs/reference/access-authn-authz/certificate-signing-requests/">https://kubernetes.io/zh-cn/docs/reference/access-authn-authz/certificate-signing-requests/</a><br />•<a href="https://kubernetes.io/zh-cn/docs/tasks/tls/managing-tls-in-a-cluster/#configuring-your-cluster-to-provide-signing">https://kubernetes.io/zh-cn/docs/tasks/tls/managing-tls-in-a-cluster/#configuring-your-cluster-to-provide-signing</a><br />•<a href="https://kubernetes.io/zh-cn/docs/reference/using-api/deprecation-guide/">https://kubernetes.io/zh-cn/docs/reference/using-api/deprecation-guide/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在编写一个准入 Webhook 服务时，需要配置相关证书，k8s 提供了 api 用于对用户自主创建的证书进行认证签发。以下部分演示为 Webhook 服务创建 TLS 证书。&lt;/p&gt;
&lt;h1 id=&quot;创建-tls-证书&quot;&gt;&lt;a class=&quot;markdownIt-Anch</summary>
      
    
    
    
    <category term="Kubebuilder" scheme="https://marklinglon.github.io/categories/Kubebuilder/"/>
    
    
    <category term="k8s" scheme="https://marklinglon.github.io/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>Kubebuilder Best Practices</title>
    <link href="https://marklinglon.github.io/2020/06/21/kubebuilder-best-practices/"/>
    <id>https://marklinglon.github.io/2020/06/21/kubebuilder-best-practices/</id>
    <published>2020-06-20T16:00:00.000Z</published>
    <updated>2023-05-26T05:53:01.733Z</updated>
    
    <content type="html"><![CDATA[<p>Kubebuilder is a framework for building Kubernetes APIs using custom resource definitions (CRDs).</p><blockquote><p>Note: kubebuilder can save us a lot of work and make developing CRDs and adminsion webhooks incredibly easy.</p></blockquote><h1 id="installation"><a class="markdownIt-Anchor" href="#installation"></a> Installation</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># download kubebuilder and install locally.</span></span><br><span class="line">curl -L -o kubebuilder https:<span class="regexp">//g</span>o.kubebuilder.io<span class="regexp">/dl/</span>latest<span class="regexp">/$(go env GOOS)/</span>$(go env GOARCH)</span><br><span class="line">chmod +x kubebuilder &amp;&amp; mv kubebuilder <span class="regexp">/usr/</span>local<span class="regexp">/bin/</span></span><br></pre></td></tr></table></figure><h1 id="create-a-project"><a class="markdownIt-Anchor" href="#create-a-project"></a> Create a Project</h1><blockquote><p>Create a directory, and then run the init command inside of it to initialize a new project. Follows an example.</p></blockquote><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[marklu@MacBook ~]$ <span class="built_in">mkdir</span> ~/Project/workspace-<span class="keyword">go</span>/example</span><br><span class="line">[marklu@MacBook ~]$ <span class="keyword">cd</span> ~/Project/workspace-<span class="keyword">go</span>/example</span><br><span class="line">[marklu@MacBook ~]$ kubebuilder init --domain marklu.<span class="keyword">com</span> --owner <span class="string">&quot;marklu&quot;</span> --repo marklu.<span class="keyword">com</span>/example</span><br><span class="line">Writing kustomize manifests <span class="keyword">for</span> you <span class="keyword">to</span> <span class="keyword">edit</span>...</span><br><span class="line">Writing scaffold <span class="keyword">for</span> you <span class="keyword">to</span> <span class="keyword">edit</span>...</span><br><span class="line">Get controller <span class="keyword">runtime</span>:</span><br><span class="line">$ <span class="keyword">go</span> <span class="built_in">get</span> sigs.k8s.io/controller-runtime@v0.<span class="number">10.0</span></span><br><span class="line">Update dependencies:</span><br><span class="line">$ <span class="keyword">go</span> <span class="keyword">mod</span> tidy</span><br><span class="line"><span class="keyword">Next</span>: define <span class="keyword">a</span> resource with:</span><br><span class="line">$ kubebuilder create api</span><br></pre></td></tr></table></figure><blockquote><p>If your project is initialized within GOPATH, the implicitly called go mod init will interpolate the module path for you. Otherwise –repo=must be set.</p></blockquote><h1 id="adding-a-new-api"><a class="markdownIt-Anchor" href="#adding-a-new-api"></a> Adding a new API</h1><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[marklu@MacBook ~]$ kubebuilder create api --group <span class="built_in">cos</span> --<span class="keyword">version</span> v1 --kind Bucket</span><br><span class="line">Create Resource [<span class="keyword">y</span>/n]</span><br><span class="line"><span class="keyword">y</span></span><br><span class="line">Create Controller [<span class="keyword">y</span>/n]</span><br><span class="line"><span class="keyword">y</span></span><br><span class="line">Writing kustomize manifests <span class="keyword">for</span> you <span class="keyword">to</span> <span class="keyword">edit</span>...</span><br><span class="line">Writing scaffold <span class="keyword">for</span> you <span class="keyword">to</span> <span class="keyword">edit</span>...</span><br><span class="line">api/v1/bucket_types.<span class="keyword">go</span></span><br><span class="line">controllers/bucket_controller.<span class="keyword">go</span></span><br><span class="line">Update dependencies:</span><br><span class="line">$ <span class="keyword">go</span> <span class="keyword">mod</span> tidy</span><br><span class="line">Running <span class="keyword">make</span>:</span><br><span class="line">$ <span class="keyword">make</span> generate</span><br><span class="line"><span class="keyword">go</span>: creating <span class="keyword">new</span> <span class="keyword">go</span>.<span class="keyword">mod</span>: module tmp</span><br><span class="line">Downloading sigs.k8s.io/controller-tools/cmd/controller-gen@v0.<span class="number">7.0</span></span><br><span class="line"><span class="keyword">go</span> <span class="built_in">get</span>: added sigs.k8s.io/controller-tools v0.<span class="number">7.0</span></span><br><span class="line">/Users/huyuhan/Project/workspace-<span class="keyword">go</span>/example/bin/controller-gen objec<span class="variable">t:headerFile</span>=<span class="string">&quot;hack/boilerplate.go.txt&quot;</span> paths=<span class="string">&quot;./...&quot;</span></span><br><span class="line"><span class="keyword">Next</span>: implement your <span class="keyword">new</span> API <span class="built_in">and</span> generate the manifests (<span class="keyword">e</span>.g. CRDs,CRs) with:</span><br><span class="line">$ <span class="keyword">make</span> manifests</span><br></pre></td></tr></table></figure><h1 id="designing-an-api"><a class="markdownIt-Anchor" href="#designing-an-api"></a> Designing an API</h1><blockquote><p>api/v1/bucket_types.go</p></blockquote><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// BucketSpec defines the desired <span class="keyword">state</span> of Bucket</span><br><span class="line">type BucketSpec struct &#123;</span><br><span class="line">// INSERT ADDITIONAL SPEC FIELDS - desired <span class="keyword">state</span> of cluster</span><br><span class="line">// Important: Run <span class="string">&quot;make&quot;</span> <span class="keyword">to</span> regenerate code after modifying this file</span><br><span class="line"></span><br><span class="line">// Foo is an example field of Bucket. Edit bucket_types.go <span class="keyword">to</span> remove/update</span><br><span class="line">Name   string `json:<span class="string">&quot;name,omitempty&quot;</span>`</span><br><span class="line">Region string `json:<span class="string">&quot;region,omitempty&quot;</span>`</span><br><span class="line">ACL    string `json:<span class="string">&quot;acl,omitempty&quot;</span>`</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="implementing-a-controller"><a class="markdownIt-Anchor" href="#implementing-a-controller"></a> Implementing a controller</h1><blockquote><p>controllers/cos.go</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> controllers</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;context&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/tencentyun/cos-go-sdk-v5&quot;</span></span><br><span class="line"><span class="string">&quot;net/http&quot;</span></span><br><span class="line"><span class="string">&quot;net/url&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> CosStorage <span class="keyword">struct</span> &#123;</span><br><span class="line">client          *cos.Client</span><br><span class="line">accessKeyId     <span class="type">string</span></span><br><span class="line">accessKeySecret <span class="type">string</span></span><br><span class="line">bucket          <span class="type">string</span></span><br><span class="line">region          <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// NewCosStorage endpoint: https://cloud.tencent.com/document/product/436/6224</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewCosStorage</span><span class="params">(region, bucketName <span class="type">string</span>)</span></span> *CosStorage &#123;</span><br><span class="line">url, _ := url.Parse(fmt.Sprintf(<span class="string">&quot;https://%s.cos.%s.myqcloud.com&quot;</span>, bucketName, region))</span><br><span class="line">accessKeyId := <span class="string">&quot;&quot;</span></span><br><span class="line">accessKeySecret := <span class="string">&quot;&quot;</span></span><br><span class="line">b := &amp;cos.BaseURL&#123;BucketURL: url&#125;</span><br><span class="line">client := cos.NewClient(b, &amp;http.Client&#123;</span><br><span class="line">Transport: &amp;cos.AuthorizationTransport&#123;</span><br><span class="line">SecretID:  accessKeyId,</span><br><span class="line">SecretKey: accessKeySecret,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">return</span> &amp;CosStorage&#123;</span><br><span class="line">client:          client,</span><br><span class="line">accessKeyId:     accessKeyId,</span><br><span class="line">accessKeySecret: accessKeySecret,</span><br><span class="line">region:          region,</span><br><span class="line">bucket:          bucketName,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *CosStorage)</span></span> Put(acl <span class="type">string</span>) <span class="type">error</span> &#123;</span><br><span class="line">opt := &amp;cos.BucketPutOptions&#123;</span><br><span class="line">XCosACL: acl,</span><br><span class="line">&#125;</span><br><span class="line">_, err := c.client.Bucket.Put(context.Background(), opt)</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *CosStorage)</span></span> Delete() <span class="type">error</span> &#123;</span><br><span class="line">_, err := c.client.Bucket.Delete(context.Background())</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>controllers/bucket_controller.go</p><blockquote><p>tips: Finalizers allow controllers to implement asynchronous pre-delete hooks. Let’s say you create an external resource (such as a storage bucket) for each object of your API type, and you want to delete the associated external resource on object’s deletion from Kubernetes, you can use a finalizer to do that.</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Copyright 2022 marklu.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="line"><span class="comment">you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment">You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment">distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment">WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment">See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment">limitations under the License.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> controllers</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;context&quot;</span></span><br><span class="line"><span class="string">&quot;k8s.io/apimachinery/pkg/runtime&quot;</span></span><br><span class="line">ctrl <span class="string">&quot;sigs.k8s.io/controller-runtime&quot;</span></span><br><span class="line"><span class="string">&quot;sigs.k8s.io/controller-runtime/pkg/client&quot;</span></span><br><span class="line"><span class="string">&quot;sigs.k8s.io/controller-runtime/pkg/controller/controllerutil&quot;</span></span><br><span class="line"><span class="string">&quot;sigs.k8s.io/controller-runtime/pkg/log&quot;</span></span><br><span class="line"></span><br><span class="line">cosv1 <span class="string">&quot;marklu.com/example/api/v1&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// BucketReconciler reconciles a Bucket object</span></span><br><span class="line"><span class="keyword">type</span> BucketReconciler <span class="keyword">struct</span> &#123;</span><br><span class="line">client.Client</span><br><span class="line">Scheme *runtime.Scheme</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">bucketFinalizerName = <span class="string">&quot;bucket.cos.marklu.com/finalizer&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">//+kubebuilder:rbac:groups=cos.marklu.com,resources=buckets,verbs=get;list;watch;create;update;patch;delete</span></span><br><span class="line"><span class="comment">//+kubebuilder:rbac:groups=cos.marklu.com,resources=buckets/status,verbs=get;update;patch</span></span><br><span class="line"><span class="comment">//+kubebuilder:rbac:groups=cos.marklu.com,resources=buckets/finalizers,verbs=update</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Reconcile is part of the main kubernetes reconciliation loop which aims to</span></span><br><span class="line"><span class="comment">// move the current state of the cluster closer to the desired state.</span></span><br><span class="line"><span class="comment">// TODO(user): Modify the Reconcile function to compare the state specified by</span></span><br><span class="line"><span class="comment">// the Bucket object against the actual cluster state, and then</span></span><br><span class="line"><span class="comment">// perform operations to make the cluster state reflect the state specified by</span></span><br><span class="line"><span class="comment">// the user.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// For more details, check Reconcile and its Result here:</span></span><br><span class="line"><span class="comment">// - https://pkg.go.dev/sigs.k8s.io/controller-runtime@v0.10.0/pkg/reconcile</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *BucketReconciler)</span></span> Reconcile(ctx context.Context, req ctrl.Request) (ctrl.Result, <span class="type">error</span>) &#123;</span><br><span class="line">logger := log.FromContext(ctx)</span><br><span class="line"></span><br><span class="line">bucket := &amp;cosv1.Bucket&#123;&#125;</span><br><span class="line"><span class="keyword">if</span> err := r.Get(ctx, req.NamespacedName, bucket); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> ctrl.Result&#123;&#125;, client.IgnoreNotFound(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// examine DeletionTimestamp to determine if object is under deletion</span></span><br><span class="line"><span class="keyword">if</span> bucket.ObjectMeta.DeletionTimestamp.IsZero() &#123;</span><br><span class="line"><span class="comment">// The object is not being deleted, so if it does not have our finalizer,</span></span><br><span class="line"><span class="comment">// then lets add the finalizer and update the object. This is equivalent</span></span><br><span class="line"><span class="comment">// registering our finalizer.</span></span><br><span class="line"><span class="keyword">if</span> !controllerutil.ContainsFinalizer(bucket, bucketFinalizerName) &#123;</span><br><span class="line">controllerutil.AddFinalizer(bucket, bucketFinalizerName)</span><br><span class="line"><span class="keyword">if</span> err := r.Update(ctx, bucket); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> ctrl.Result&#123;&#125;, err</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> err := r.updateExternalResources(bucket); err != <span class="literal">nil</span> &#123;</span><br><span class="line">logger.Error(err, <span class="string">&quot;unable to create Bucket&quot;</span>)</span><br><span class="line"><span class="keyword">return</span> ctrl.Result&#123;&#125;, err</span><br><span class="line">&#125;</span><br><span class="line">logger.Info(<span class="string">&quot;create Bucket succeed&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// The object is being deleted</span></span><br><span class="line"><span class="keyword">if</span> controllerutil.ContainsFinalizer(bucket, bucketFinalizerName) &#123;</span><br><span class="line"><span class="comment">// our finalizer is present, so lets handle any external dependency</span></span><br><span class="line"><span class="keyword">if</span> err := r.deleteExternalResources(bucket); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="comment">// if fail to delete the external dependency here, return with error</span></span><br><span class="line"><span class="comment">// so that it can be retried</span></span><br><span class="line">logger.Error(err, <span class="string">&quot;unable to delete Bucket&quot;</span>)</span><br><span class="line"><span class="keyword">return</span> ctrl.Result&#123;&#125;, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// remove our finalizer from the list and update it.</span></span><br><span class="line">controllerutil.RemoveFinalizer(bucket, bucketFinalizerName)</span><br><span class="line"><span class="keyword">if</span> err := r.Update(ctx, bucket); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> ctrl.Result&#123;&#125;, err</span><br><span class="line">&#125;</span><br><span class="line">logger.Info(<span class="string">&quot;delete Bucket succeed&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Stop reconciliation as the item is being deleted</span></span><br><span class="line"><span class="keyword">return</span> ctrl.Result&#123;&#125;, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// bucket reconcile logic</span></span><br><span class="line"><span class="keyword">return</span> ctrl.Result&#123;&#125;, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *BucketReconciler)</span></span> updateExternalResources(bucket *cosv1.Bucket) <span class="type">error</span> &#123;</span><br><span class="line">cosClient := NewCosStorage(bucket.Spec.Region, bucket.Spec.Name)</span><br><span class="line"><span class="keyword">return</span> cosClient.Put(bucket.Spec.ACL)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *BucketReconciler)</span></span> deleteExternalResources(bucket *cosv1.Bucket) <span class="type">error</span> &#123;</span><br><span class="line">cosClient := NewCosStorage(bucket.Spec.Region, bucket.Spec.Name)</span><br><span class="line"><span class="keyword">return</span> cosClient.Delete()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// SetupWithManager sets up the controller with the Manager.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *BucketReconciler)</span></span> SetupWithManager(mgr ctrl.Manager) <span class="type">error</span> &#123;</span><br><span class="line"><span class="keyword">return</span> ctrl.NewControllerManagedBy(mgr).</span><br><span class="line">For(&amp;cosv1.Bucket&#123;&#125;).</span><br><span class="line">Complete(r)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="test-it-out"><a class="markdownIt-Anchor" href="#test-it-out"></a> Test It Out</h1><blockquote><ol><li>Install the CRDs into the cluster (make install)</li></ol></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[marklu@MacBook ~]$ make install</span><br><span class="line">/Users/huyuhan/Project/workspace-go/example/bin/controller-gen rbac:roleName=manager-role crd webhook paths=<span class="string">&quot;./...&quot;</span> output:crd:artifacts:config=config/crd/bases</span><br><span class="line">/Users/huyuhan/Project/workspace-go/example/bin/kustomize build config/crd | kubectl apply -f -</span><br><span class="line">customresourcedefinition.apiextensions.k8s.io/buckets.cos.marklu.com created</span><br></pre></td></tr></table></figure><blockquote><ol start="2"><li>Run your controller (this will run in the foreground, so switch to a new terminal if you want to leave it running) (make run)</li></ol></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[marklu@MacBook ~]$ make <span class="built_in">run</span></span><br><span class="line">/Users/huyuhan/Project/workspace-go/example/bin/controller-gen rbac:<span class="attribute">roleName</span>=manager-role crd webhook <span class="attribute">paths</span>=<span class="string">&quot;./...&quot;</span> output:crd:artifacts:<span class="attribute">config</span>=config/crd/bases</span><br><span class="line">/Users/huyuhan/Project/workspace-go/example/bin/controller-gen object:<span class="attribute">headerFile</span>=<span class="string">&quot;hack/boilerplate.go.txt&quot;</span> <span class="attribute">paths</span>=<span class="string">&quot;./...&quot;</span></span><br><span class="line">go fmt ./<span class="built_in">..</span>.</span><br><span class="line">go vet ./<span class="built_in">..</span>.</span><br><span class="line">go <span class="built_in">run</span> ./main.go</span><br><span class="line">2022-01-27T22:05:30.207+0800<span class="built_in">INFO</span>controller-runtime.metricsmetrics<span class="built_in"> server </span>is starting <span class="keyword">to</span> listen&#123;<span class="string">&quot;addr&quot;</span>: <span class="string">&quot;:8080&quot;</span>&#125;</span><br><span class="line">2022-01-27T22:05:30.207+0800<span class="built_in">INFO</span>setupstarting manager</span><br><span class="line">2022-01-27T22:05:30.208+0800<span class="built_in">INFO</span>starting metrics<span class="built_in"> server</span>&#123;<span class="string">&quot;path&quot;</span>: <span class="string">&quot;/metrics&quot;</span>&#125;</span><br><span class="line">2022-01-27T22:05:30.208+0800<span class="built_in">INFO</span>controller.bucketStarting EventSource&#123;<span class="string">&quot;reconciler group&quot;</span>: <span class="string">&quot;cos.marklu.com&quot;</span>, <span class="string">&quot;reconciler kind&quot;</span>: <span class="string">&quot;Bucket&quot;</span>, <span class="string">&quot;source&quot;</span>: <span class="string">&quot;kind source: /, Kind=&quot;</span>&#125;</span><br><span class="line">2022-01-27T22:05:30.208+0800<span class="built_in">INFO</span>controller.bucketStarting Controller&#123;<span class="string">&quot;reconciler group&quot;</span>: <span class="string">&quot;cos.marklu.com&quot;</span>, <span class="string">&quot;reconciler kind&quot;</span>: <span class="string">&quot;Bucket&quot;</span>&#125;</span><br><span class="line">2022-01-27T22:05:30.309+0800<span class="built_in">INFO</span>controller.bucketStarting workers&#123;<span class="string">&quot;reconciler group&quot;</span>: <span class="string">&quot;cos.marklu.com&quot;</span>, <span class="string">&quot;reconciler kind&quot;</span>: <span class="string">&quot;Bucket&quot;</span>, <span class="string">&quot;worker count&quot;</span>: 1&#125;</span><br></pre></td></tr></table></figure><blockquote><ol start="3"><li>Create Custom Resources (create <a href="http://bucket.cos.marklu.com/bucket-sample">bucket.cos.marklu.com/bucket-sample</a>) (cos_v1_bucket.yaml)</li></ol></blockquote><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">apiVersion:</span> cos.marklu.com/v1</span><br><span class="line"><span class="symbol">kind:</span> Bucket</span><br><span class="line"><span class="symbol">metadata:</span></span><br><span class="line"><span class="symbol">  name:</span> bucket-sample</span><br><span class="line"><span class="symbol">  namespace:</span> marklu</span><br><span class="line"><span class="symbol">spec:</span></span><br><span class="line">  <span class="meta"># TODO(user): Add fields here</span></span><br><span class="line"><span class="symbol">  name:</span> example<span class="number">-1251762279</span></span><br><span class="line"><span class="symbol">  region:</span> ap-shanghai</span><br><span class="line"><span class="symbol">  acl:</span> private</span><br></pre></td></tr></table></figure><p>kubectl apply -f cos_v1_bucket.yaml</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[marklu@MacBook ~]</span>$ kubectl apply -f cos_v1_bucket<span class="selector-class">.yaml</span></span><br><span class="line">bucket<span class="selector-class">.cos</span><span class="selector-class">.marklu</span>.com/bucket-sample created</span><br><span class="line"><span class="selector-attr">[marklu@MacBook ~]</span>$ kubectl get bucket<span class="selector-class">.cos</span><span class="selector-class">.marklu</span><span class="selector-class">.com</span>  -n marklu</span><br><span class="line">NAME            AGE</span><br><span class="line">bucket-sample   <span class="number">17s</span></span><br></pre></td></tr></table></figure><p>Tencent cloud console view found that the bucket was created normally.</p><blockquote><ol start="4"><li>Delete Instances of Custom Resources (delete <a href="http://bucket.cos.marklu.com/bucket-sample">bucket.cos.marklu.com/bucket-sample</a>)</li></ol></blockquote><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[marklu@MacBook ~]</span>$ kubectl delete -f cos_v1_bucket<span class="selector-class">.yaml</span></span><br><span class="line">bucket<span class="selector-class">.cos</span><span class="selector-class">.marklu</span><span class="selector-class">.com</span> <span class="string">&quot;bucket-sample&quot;</span> deleted</span><br></pre></td></tr></table></figure><h1 id="run-it-on-the-cluster"><a class="markdownIt-Anchor" href="#run-it-on-the-cluster"></a> Run It On the Cluster</h1><blockquote><p>Deploy the controller to the cluster with image specified by IMG</p></blockquote><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">make</span> docker-build docker-push IMG=<span class="symbol">&lt;some-registry&gt;</span>/<span class="symbol">&lt;project-name&gt;</span>:<span class="keyword">tag</span></span><br><span class="line"><span class="keyword">make</span> deploy IMG=<span class="symbol">&lt;some-registry&gt;</span>/<span class="symbol">&lt;project-name&gt;</span>:<span class="keyword">tag</span></span><br></pre></td></tr></table></figure><h1 id="reference-documentation"><a class="markdownIt-Anchor" href="#reference-documentation"></a> Reference documentation</h1><ul><li><a href="https://github.com/kubernetes-sigs/kubebuilder">https://github.com/kubernetes-sigs/kubebuilder</a></li><li><a href="https://book.kubebuilder.io/introduction.html">https://book.kubebuilder.io/introduction.html</a></li><li><a href="https://kubernetes.io/docs/concepts/extend-kubernetes/operator/">https://kubernetes.io/docs/concepts/extend-kubernetes/operator/</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Kubebuilder is a framework for building Kubernetes APIs using custom resource definitions (CRDs).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: kubebuilder c</summary>
      
    
    
    
    <category term="Kubebuilder" scheme="https://marklinglon.github.io/categories/Kubebuilder/"/>
    
    
    <category term="k8s" scheme="https://marklinglon.github.io/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>Kubebuilder Watch Rresources</title>
    <link href="https://marklinglon.github.io/2020/06/21/kubebuilder-watch-resources/"/>
    <id>https://marklinglon.github.io/2020/06/21/kubebuilder-watch-resources/</id>
    <published>2020-06-20T16:00:00.000Z</published>
    <updated>2023-05-26T05:53:05.309Z</updated>
    
    <content type="html"><![CDATA[<p>我们在开发过程中，可能需要开发一个类似Deployment的资源逻辑，管理依赖资源是控制器的基础，如果不能观察它们的状态变化就不可能管理它们。这就意味着，我们需要 reconciler 能监控多个资源的变化。</p><blockquote><p>NOTE: Deployment 必须知道其管理的 ReplicaSet 何时更改，ReplicaSet 必须知道其管理的 Pod 何时被删除，或者从健康变为不健康等。</p></blockquote><p>控制器运行时库为管理和监视资源提供了多种方式。这包括从简单而明显的用例（例如查看由控制器创建和管理的资源）到更独特和更高级的用例。</p><p>•控制器创建和管理的资源 (Watching Operator Managed Resources)<br />•外部管理的资源 (Watching Externally Managed Resources)</p><h1 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h1><p>以 Tcaplus 资源为例，Tcaplus 资源通过 ConfigMap（proto 文件）来创建表格。当 ConfigMap 发生变化时自动更新表格，下面例子不实际调用腾讯云API，只要验证接收到事件请求即可。</p><blockquote><p>NOTE: TcaplusDB 是腾讯出品的分布式NoSQL数据库。官方API文档：<a href="https://cloud.tencent.com/document/product/596/39648%E3%80%82">https://cloud.tencent.com/document/product/596/39648。</a></p></blockquote><h1 id="控制器创建和管理的资源"><a class="markdownIt-Anchor" href="#控制器创建和管理的资源"></a> 控制器创建和管理的资源</h1><p>资源定义 (Defined Tcaplus Resources)<br />api/v1/tcaplus_types.go</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> TcaplusSpec <span class="keyword">struct</span> &#123;</span><br><span class="line">    Checksum <span class="type">string</span> <span class="string">`json:&quot;checksum,omitempty&quot;`</span></span><br><span class="line">    ConfigMapTemplate ConfigMapTemplate <span class="string">`json:&quot;configMapTemplate,omitempty&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> ConfigMapTemplate <span class="keyword">struct</span> &#123;</span><br><span class="line">    Name <span class="type">string</span> <span class="string">`json:&quot;name,omitempty&quot;`</span></span><br><span class="line">    Data <span class="keyword">map</span>[<span class="type">string</span>]<span class="type">string</span> <span class="string">`json:&quot;data,omitempty&quot;`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="控制器逻辑-manage-the-owned-resource"><a class="markdownIt-Anchor" href="#控制器逻辑-manage-the-owned-resource"></a> 控制器逻辑 (Manage the Owned Resource)</h1><h2 id="controllerstcaplus_controllergo"><a class="markdownIt-Anchor" href="#controllerstcaplus_controllergo"></a> controllers/tcaplus_controller.go</h2><p>当 tcaplus CR 创建时根据 ConfigMapTemplate 创建附属的 ConfigMap 资源并设置属主关系。</p><p>•Reconcile 方法：根据模版创建 ConfigMap 并设置属主关系<br />•SetupWithManager 方法：For 方法之后调用 Owns 方法</p><figure class="highlight roboconf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">func (r *TcaplusReconciler) Reconcile(ctx context.Context, req ctrl.Request) (ctrl.Result, error) &#123;</span><br><span class="line"><span class="attribute">logger</span> := log<span class="variable">.FromContext</span>(ctx)</span><br><span class="line"></span><br><span class="line">logger<span class="variable">.Info</span>(&quot;reconciling&quot;)</span><br><span class="line">tcaplus := &amp;examplev1<span class="variable">.Tcaplus</span>&#123;&#125;</span><br><span class="line">if err := r<span class="variable">.Get</span>(ctx, req<span class="variable">.NamespacedName</span>, tcaplus); <span class="attribute">err != nil &#123;</span></span><br><span class="line"><span class="attribute">return ctrl.Result&#123;&#125;, client.IgnoreNotFound(err)</span></span><br><span class="line"><span class="attribute">&#125;</span></span><br><span class="line"><span class="attribute"></span></span><br><span class="line"><span class="attribute">configMap</span> := &amp;corev1<span class="variable">.ConfigMap</span>&#123;&#125;</span><br><span class="line">configMap<span class="variable">.Name</span> = tcaplus<span class="variable">.Spec</span><span class="variable">.ConfigMapTemplate</span><span class="variable">.Name</span></span><br><span class="line">configMap<span class="variable">.Namespace</span> = tcaplus<span class="variable">.Namespace</span></span><br><span class="line">configMap<span class="variable">.Data</span> = tcaplus<span class="variable">.Spec</span><span class="variable">.ConfigMapTemplate</span><span class="variable">.Data</span></span><br><span class="line">    </span><br><span class="line">if err := controllerutil<span class="variable">.SetControllerReference</span>(tcaplus, configMap, r<span class="variable">.Scheme</span>); <span class="attribute">err != nil &#123;</span></span><br><span class="line"><span class="attribute">logger.Error(err, &quot;get configmap failed&quot;, &quot;configmap&quot;, configMap.Name)</span></span><br><span class="line"><span class="attribute">return ctrl.Result&#123;&#125;, err</span></span><br><span class="line"><span class="attribute">&#125;</span></span><br><span class="line"><span class="attribute"></span></span><br><span class="line"><span class="attribute">foundConfigMap</span> := &amp;corev1<span class="variable">.ConfigMap</span>&#123;&#125;</span><br><span class="line">err := r<span class="variable">.Get</span>(ctx, types<span class="variable">.NamespacedName</span>&#123;Name: configMap<span class="variable">.Name</span>, Namespace: tcaplus<span class="variable">.Namespace</span>&#125;, foundConfigMap)</span><br><span class="line">if err != nil &amp;&amp; errors<span class="variable">.IsNotFound</span>(err) &#123;</span><br><span class="line">logger<span class="variable">.V</span>(1)<span class="variable">.Info</span>(&quot;creating configmap&quot;, &quot;configmap&quot;, configMap<span class="variable">.Name</span>)</span><br><span class="line">err = r<span class="variable">.Create</span>(ctx, configMap)</span><br><span class="line">&#125;</span><br><span class="line">return ctrl<span class="variable">.Result</span>&#123;&#125;, nil</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// SetupWithManager sets up the controller with the Manager.</span><br><span class="line">func (r *TcaplusReconciler) SetupWithManager(mgr ctrl<span class="variable">.Manager</span>) error &#123;</span><br><span class="line">return ctrl<span class="variable">.NewControllerManagedBy</span>(mgr).</span><br><span class="line">For(&amp;examplev1<span class="variable">.Tcaplus</span>&#123;&#125;).</span><br><span class="line">Owns(&amp;corev1<span class="variable">.ConfigMap</span>&#123;&#125;).</span><br><span class="line">Complete(r)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>NOTE：同一控制器创建的资源才可以设置属主关系，不然会提示：already owned by another controller。</p></blockquote><h1 id="测试"><a class="markdownIt-Anchor" href="#测试"></a> 测试</h1><p>config/samples/example_v1_tcaplus.yaml</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">apiVersion:</span> example.blazehu.com/v1</span><br><span class="line"><span class="symbol">kind:</span> Tcaplus</span><br><span class="line"><span class="symbol">metadata:</span></span><br><span class="line"><span class="symbol">  name:</span> tcaplus-sample</span><br><span class="line"><span class="symbol">spec:</span></span><br><span class="line"><span class="symbol">  checksum:</span> <span class="string">&quot;123&quot;</span></span><br><span class="line"><span class="symbol">  configMapTemplate:</span></span><br><span class="line"><span class="symbol">    name:</span> <span class="string">&quot;tcaplus-configmap-example&quot;</span></span><br><span class="line"><span class="symbol">    data:</span></span><br><span class="line">      demo.proto: |</span><br><span class="line">        <span class="attr">syntax</span> <span class="operator">=</span> <span class="string">&quot;proto3&quot;</span><span class="punctuation">;</span></span><br><span class="line">        package <span class="attr">example</span><span class="punctuation">;</span></span><br><span class="line">        message <span class="title class_">Example</span> <span class="punctuation">&#123;</span></span><br><span class="line">          uint32 a = <span class="number">1</span><span class="punctuation">;</span></span><br><span class="line">          uint32 b = <span class="number">2</span><span class="punctuation">;</span></span><br><span class="line">          uint32 c = <span class="number">3</span><span class="punctuation">;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>使用上述配置文件创建 tcaplus 资源。创建结果：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">marklu-<span class="variable constant_">MB2</span><span class="symbol">:samples</span> <span class="variable">$ </span>k get tcaplus</span><br><span class="line"><span class="variable constant_">NAME</span> <span class="variable constant_">AGE</span></span><br><span class="line">tcaplus-sample 19m</span><br><span class="line">marklu-<span class="variable constant_">MB2</span><span class="symbol">:samples</span> <span class="variable">$ </span>k get configmap</span><br><span class="line"><span class="variable constant_">NAME</span> <span class="variable constant_">DATA</span> <span class="variable constant_">AGE</span></span><br><span class="line">tcaplus-configmap-example <span class="number">1</span> 19m</span><br></pre></td></tr></table></figure><p>可以查看 tcaplus-configmap-example 的属主关系：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">apiVersion:</span> v1</span><br><span class="line"><span class="symbol">data:</span></span><br><span class="line">  demo.proto: |</span><br><span class="line">    <span class="attr">syntax</span> <span class="operator">=</span> <span class="string">&quot;proto3&quot;</span><span class="punctuation">;</span></span><br><span class="line">    package <span class="attr">example</span><span class="punctuation">;</span></span><br><span class="line">    message <span class="title class_">Example</span> <span class="punctuation">&#123;</span></span><br><span class="line">      uint32 a = <span class="number">1</span><span class="punctuation">;</span></span><br><span class="line">      uint32 b = <span class="number">2</span><span class="punctuation">;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="symbol">kind:</span> ConfigMap</span><br><span class="line"><span class="symbol">metadata:</span></span><br><span class="line"><span class="symbol">  creationTimestamp:</span> <span class="string">&quot;2022-07-07T09:02:43Z&quot;</span></span><br><span class="line"><span class="symbol">  name:</span> tcaplus-configmap-example</span><br><span class="line"><span class="symbol">  namespace:</span> default</span><br><span class="line"><span class="symbol">  ownerReferences:</span></span><br><span class="line">  - apiVersion: example.blazehu.com/v1</span><br><span class="line"><span class="symbol">    blockOwnerDeletion:</span> true</span><br><span class="line"><span class="symbol">    controller:</span> true</span><br><span class="line"><span class="symbol">    kind:</span> Tcaplus</span><br><span class="line"><span class="symbol">    name:</span> tcaplus-sample</span><br><span class="line"><span class="symbol">    uid:</span> <span class="number">7</span>c50f2e1<span class="number">-0e37</span><span class="number">-4</span>aa0-bf49-c2d410d6153e</span><br><span class="line"><span class="symbol">  resourceVersion:</span> <span class="string">&quot;6837330713&quot;</span></span><br><span class="line"><span class="symbol">  selfLink:</span> <span class="keyword">/api/</span>v1<span class="keyword">/namespaces/</span>default<span class="keyword">/configmaps/</span>tcaplus-configmap-example</span><br><span class="line"><span class="symbol">  uid:</span> <span class="number">6</span>c29f90b<span class="number">-0e51</span><span class="number">-4</span>d9f-a6a8-cfb6906ed1b0</span><br></pre></td></tr></table></figure><p>手动修改 tcaplus-sample 和 tcaplus-configmap-example 后查看控制器日志发现能正常观察 CR 和 ConfigMap 的变化了。</p><h1 id="外部管理的资源"><a class="markdownIt-Anchor" href="#外部管理的资源"></a> 外部管理的资源</h1><p>资源定义 (Defined Tcaplus Resources)<br />api/v1/tcaplus_types.go</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="type">TcaplusSpec</span> struct &#123;</span><br><span class="line"><span class="type">Checksum</span>     string             `json:&quot;checksum,omitempty&quot;`</span><br><span class="line"><span class="type">ConfigMapRef</span> <span class="type">ConfigMapReference</span> `json:&quot;configMapRef,omitempty&quot;`</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="type">ConfigMapReference</span> struct &#123;</span><br><span class="line"><span class="type">Name</span> string `json:&quot;name,omitempty&quot;`</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="控制器逻辑-manage-the-owned-resource-2"><a class="markdownIt-Anchor" href="#控制器逻辑-manage-the-owned-resource-2"></a> 控制器逻辑 (Manage the Owned Resource)</h1><h5 id="controllerstcaplus_controllergo-2"><a class="markdownIt-Anchor" href="#controllerstcaplus_controllergo-2"></a> controllers/tcaplus_controller.go</h5><p>For 方法之后调用 Watches 方法就可以监听对应资源的事件，但是会监听集群里所有相关资源的事件，所以这里我们自定义事件处理方法来过滤出我们关注的资源的事件。</p><p>•通过 EnqueueRequestsFromMapFunc 创建一个事件处理方法，该方法通过 FieldSelector 在 ConfigMap 的事件中过滤出跟 tcaplus CR 相关联的事件。<br />•使用 FieldSelector 时我们需要建立对应的索引，使用 mgr.GetFieldIndexer().IndexField() 创建。</p><figure class="highlight roboconf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">const (</span><br><span class="line">    ConfigMapField = &quot;.spec.configMapRef.name&quot;</span><br><span class="line">) </span><br><span class="line">func (r *TcaplusReconciler) findObjectsForConfigMap(configMap client.Object) []reconcile.Request &#123;</span><br><span class="line">    <span class="attribute">attachedTcaplusList</span> := &amp;examplev1<span class="variable">.TcaplusList</span>&#123;&#125;</span><br><span class="line">    listOps := &amp;client<span class="variable">.ListOptions</span>&#123;</span><br><span class="line">        FieldSelector: fields<span class="variable">.OneTermEqualSelector</span>(ConfigMapField, configMap<span class="variable">.GetName</span>()),</span><br><span class="line">        Namespace: configMap<span class="variable">.GetNamespace</span>(),</span><br><span class="line">    &#125;</span><br><span class="line">    err := r<span class="variable">.List</span>(context<span class="variable">.TODO</span>(), attachedTcaplusList, listOps)</span><br><span class="line">    if err != nil &#123;</span><br><span class="line">        return []reconcile<span class="variable">.Request</span>&#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    requests := make([]reconcile<span class="variable">.Request</span>, len(attachedTcaplusList<span class="variable">.Items</span>))</span><br><span class="line">    for i, item := range attachedTcaplusList<span class="variable">.Items</span> &#123;</span><br><span class="line">        requests[i] = reconcile<span class="variable">.Request</span>&#123;</span><br><span class="line">            NamespacedName: types<span class="variable">.NamespacedName</span>&#123;</span><br><span class="line">                Name: item<span class="variable">.GetName</span>(),</span><br><span class="line">                Namespace: item<span class="variable">.GetNamespace</span>(),</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return requests</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">// SetupWithManager sets up the controller with the Manager.</span><br><span class="line">func (r *TcaplusReconciler) SetupWithManager(mgr ctrl<span class="variable">.Manager</span>) error &#123;</span><br><span class="line">if err := mgr<span class="variable">.GetFieldIndexer</span>()<span class="variable">.IndexField</span>(context<span class="variable">.Background</span>(), &amp;examplev1<span class="variable">.Tcaplus</span>&#123;&#125;, ConfigMapField, func(rawObj client<span class="variable">.Object</span>) []string &#123;</span><br><span class="line">tcaplus := rawObj.(*examplev1<span class="variable">.Tcaplus</span>)</span><br><span class="line">if tcaplus<span class="variable">.Spec</span><span class="variable">.ConfigMapRef</span><span class="variable">.Name</span> == &quot;&quot; &#123;</span><br><span class="line">return nil</span><br><span class="line">&#125;</span><br><span class="line">return []string&#123;tcaplus<span class="variable">.Spec</span><span class="variable">.ConfigMapRef</span><span class="variable">.Name</span>&#125;</span><br><span class="line">&#125;); <span class="attribute">err != nil &#123;</span></span><br><span class="line"><span class="attribute">return err</span></span><br><span class="line"><span class="attribute">&#125;</span></span><br><span class="line"><span class="attribute"></span></span><br><span class="line"><span class="attribute">return ctrl.NewControllerManagedBy(mgr).</span></span><br><span class="line"><span class="attribute">For(&amp;examplev1.Tcaplus&#123;&#125;).</span></span><br><span class="line"><span class="attribute">Watches(</span></span><br><span class="line"><span class="attribute">&amp;source.Kind&#123;Type</span>: &amp;corev1<span class="variable">.ConfigMap</span>&#123;&#125;&#125;,</span><br><span class="line">handler<span class="variable">.EnqueueRequestsFromMapFunc</span>(r<span class="variable">.findObjectsForConfigMap</span>),</span><br><span class="line">builder<span class="variable">.WithPredicates</span>(predicate<span class="variable">.ResourceVersionChangedPredicate</span>&#123;&#125;),</span><br><span class="line">).</span><br><span class="line">Complete(r)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>NOTE: 我们也可以自己定一个变更过滤器 Predicate。也可以通过 WithEventFilter 来针对监听的所有资源过滤。</p></blockquote><h1 id="测试-2"><a class="markdownIt-Anchor" href="#测试-2"></a> 测试</h1><p>config/samples/example_v1_tcaplus.yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tcaplus-configmap-example</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">demo.proto:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    syntax = &quot;proto3&quot;;</span></span><br><span class="line"><span class="string">    package example;</span></span><br><span class="line"><span class="string">    message Example &#123;</span></span><br><span class="line"><span class="string">      uint32 a = 1;</span></span><br><span class="line"><span class="string">      uint32 b = 2;</span></span><br><span class="line"><span class="string">      uint32 c = 3;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">example.blazehu.com/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Tcaplus</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tcaplus-sample</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">checksum:</span> <span class="string">&quot;123&quot;</span></span><br><span class="line">  <span class="attr">configMapRef:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">&quot;tcaplus-configmap-example&quot;</span></span><br></pre></td></tr></table></figure><p>使用上述配置创建完毕后，手动修改 tcaplus-sample 和 tcaplus-configmap-example 查看控制器日志发现同样能正常观察 CR 和 ConfigMap 的变化。</p><blockquote><p>NOTE: 查看 tcaplus-configmap-example 可以看到没有和 tcaplus 的属主关系。</p></blockquote><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><p>•EventHandler 可以在 watch 特定资源时设置该资源的事件监听规则。<br />•WithEventFilter 配置变更过滤器，可以针对 watch 的所有资源，统一地设置事件监听规则。<br />•Owns 源码分析可以发现 Owns 相当于调用 Watches(&amp;source.Kind{Type: <ForType-forInput>}, &amp;handler.EnqueueRequestForOwner{OwnerType: apiType, IsController: true})。</p><h1 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h1><p>•<a href="https://www.kubebuilder.io/reference/watching-resources.html">https://www.kubebuilder.io/reference/watching-resources.html</a><br />•<a href="https://kubernetes.io/zh-cn/docs/concepts/overview/working-with-objects/owners-dependents/">https://kubernetes.io/zh-cn/docs/concepts/overview/working-with-objects/owners-dependents/</a><br />•<a href="https://segmentfault.com/a/1190000020359577">https://segmentfault.com/a/1190000020359577</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;我们在开发过程中，可能需要开发一个类似Deployment的资源逻辑，管理依赖资源是控制器的基础，如果不能观察它们的状态变化就不可能管理它们。这就意味着，我们需要 reconciler 能监控多个资源的变化。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE: Deploy</summary>
      
    
    
    
    <category term="Kubebuilder" scheme="https://marklinglon.github.io/categories/Kubebuilder/"/>
    
    
    <category term="k8s" scheme="https://marklinglon.github.io/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>Kubebuilder Admission Webhooks</title>
    <link href="https://marklinglon.github.io/2020/06/21/kubebuilder-Admission-Webhooks/"/>
    <id>https://marklinglon.github.io/2020/06/21/kubebuilder-Admission-Webhooks/</id>
    <published>2020-06-20T16:00:00.000Z</published>
    <updated>2023-05-26T05:52:57.691Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是准入控制"><a class="markdownIt-Anchor" href="#什么是准入控制"></a> 什么是准入控制?</h1><p>准入控制（Admission Controller）是 Kubernetes API Server 用于拦截请求的一种手段。Admission 可以做到对请求的资源对象进行校验，修改。service mesh 最近很火的项目 Istio 天生支持 Kubernetes，利用的就是 Admission 对服务实例自动注入 sidecar。</p><h1 id="什么是准入-webhook"><a class="markdownIt-Anchor" href="#什么是准入-webhook"></a> 什么是准入 Webhook？</h1><p>准入 Webhook 是一种用于接收准入请求并对其进行处理的 HTTP 回调机制。 可以定义两种类型的准入 webhook，即 验证性质的准入 Webhook 和 修改性质的准入 Webhook。修改性质的准入 Webhook 会先被调用。它们可以更改发送到 API 服务器的对象以执行自定义的设置默认值操作。</p><p>在完成了所有对象修改并且 API 服务器也验证了所传入的对象之后， 验证性质的 Webhook 会被调用，并通过拒绝请求的方式来强制实施自定义的策略。</p><blockquote><p>说明： 如果准入 Webhook 需要保证它们所看到的是对象的最终状态以实施某种策略。 则应使用验证性质的准入 Webhook，因为对象被修改性质 Webhook 看到之后仍然可能被修改。<br /><img src="/images/webhook1.jpeg" alt="图片" /></p></blockquote><h1 id="尝试准入-webhook"><a class="markdownIt-Anchor" href="#尝试准入-webhook"></a> 尝试准入 Webhook</h1><p>先决条件<br />•确保 Kubernetes 集群版本至少为 v1.16（以便使用 <a href="http://admissionregistration.k8s.io/v1">admissionregistration.k8s.io/v1</a> API） 或者 v1.9 （以便使 <a href="http://admissionregistration.k8s.io/v1beta1">admissionregistration.k8s.io/v1beta1</a> API）。<br />•确保启用 MutatingAdmissionWebhook 和 ValidatingAdmissionWebhook 控制器。 这里是一组推荐的 admission 控制器，通常可以启用。<br />•确保启用了 <a href="http://admissionregistration.k8s.io/v1beta1">admissionregistration.k8s.io/v1beta1</a> API。</p><h1 id="配置准入-webhook"><a class="markdownIt-Anchor" href="#配置准入-webhook"></a> 配置准入 Webhook</h1><p>你可以通过 ValidatingWebhookConfiguration 或者 MutatingWebhookConfiguration 动态配置哪些资源要被哪些准入 Webhook 处理。详细配置可以参阅 Webhook配置 部分。</p><h1 id="认证和信任"><a class="markdownIt-Anchor" href="#认证和信任"></a> 认证和信任</h1><p>默认情况下，apiserver不会向webhooks进行身份验证。但是，如果您想对客户端进行身份验证，可以将apiserver配置为使用基本身份验证、承载令牌或证书对Webhook进行身份验证。你可以在这里找到详细的步骤。</p><h1 id="编写一个准入-webhook-服务器"><a class="markdownIt-Anchor" href="#编写一个准入-webhook-服务器"></a> 编写一个准入 Webhook 服务器</h1><p>Webhook Admission 属于同步调用，需要用户部署自己的 webhook server，创建自定义的配置资源对象： ValidatingWebhookConfiguration 或 MutatingWebhookConfiguration。下面使用 kubebuilder 开发一个简单的 demo。</p><p>6.1 创建项目</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubebuilder init <span class="attr">--domain</span> marklu<span class="selector-class">.com</span> <span class="attr">--owner</span> <span class="string">&quot;marklu&quot;</span> <span class="attr">--repo</span> marklu.com/kubegame</span><br></pre></td></tr></table></figure><p>提示： 这里通过 kubebuilder v3 创建的话，在 config 目录下会缺少 certmanager、webhook 目录以及 default/manager_webhook_patch.yml 和 webhookcainjection_patch.yaml 文件。可以通过从v2生成拷贝过来进行修改。</p><p>6.2 创建控制器<br />这里只需要创建一个控制器</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubebuilder create api --<span class="keyword">group</span> <span class="title">svc</span> --<span class="keyword">version</span> v1 --kind App</span><br></pre></td></tr></table></figure><p>6.3 创建 webhook<br />Implement Your Handler<br />新增 mutatingwebhook.go &amp; validatingwebhook.go 文件</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// mutatingwebhook.go</span></span><br><span class="line">package controllers</span><br><span class="line"></span><br><span class="line">import (</span><br><span class="line"><span class="string">&quot;context&quot;</span></span><br><span class="line"><span class="string">&quot;encoding/json&quot;</span></span><br><span class="line">corev1 <span class="string">&quot;k8s.io/api/core/v1&quot;</span></span><br><span class="line"><span class="string">&quot;net/http&quot;</span></span><br><span class="line"><span class="string">&quot;sigs.k8s.io/controller-runtime/pkg/client&quot;</span></span><br><span class="line"><span class="string">&quot;sigs.k8s.io/controller-runtime/pkg/webhook/admission&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// +kubebuilder:webhook:admissionReviewVersions=v1,sideEffects=None,path=/mutate-v1-svc,mutating=true,failurePolicy=fail,groups=&quot;&quot;,resources=services,verbs=create;update,versions=v1,name=msvc.kb.io</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// KubeGameAnnotator annotates Pods</span></span><br><span class="line">type KubeGameAnnotator struct &#123;</span><br><span class="line">Client  client<span class="selector-class">.Client</span></span><br><span class="line">decoder *admission<span class="selector-class">.Decoder</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Handle adds an annotation to every incoming pods.</span></span><br><span class="line">func (<span class="selector-tag">a</span> *KubeGameAnnotator) <span class="built_in">Handle</span>(ctx context<span class="selector-class">.Context</span>, req admission.Request) admission<span class="selector-class">.Response</span> &#123;</span><br><span class="line">pod := &amp;corev1.Pod&#123;&#125;</span><br><span class="line"></span><br><span class="line">err := <span class="selector-tag">a</span><span class="selector-class">.decoder</span><span class="selector-class">.Decode</span>(req, pod)</span><br><span class="line"><span class="keyword">if</span> err != nil &#123;</span><br><span class="line">return admission<span class="selector-class">.Errored</span>(http<span class="selector-class">.StatusBadRequest</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> pod<span class="selector-class">.Annotations</span> == nil &#123;</span><br><span class="line">pod<span class="selector-class">.Annotations</span> = map<span class="selector-attr">[string]</span>string&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line">pod<span class="selector-class">.Annotations</span><span class="selector-attr">[<span class="string">&quot;example-mutating-admission-webhook&quot;</span>]</span> = <span class="string">&quot;foo&quot;</span></span><br><span class="line"></span><br><span class="line">marshaledPod, err := json<span class="selector-class">.Marshal</span>(pod)</span><br><span class="line"><span class="keyword">if</span> err != nil &#123;</span><br><span class="line">return admission<span class="selector-class">.Errored</span>(http<span class="selector-class">.StatusInternalServerError</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return admission<span class="selector-class">.PatchResponseFromRaw</span>(req<span class="selector-class">.Object</span><span class="selector-class">.Raw</span>, marshaledPod)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// KubeGameAnnotator implements admission.DecoderInjector.</span></span><br><span class="line"><span class="comment">// A decoder will be automatically injected.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// InjectDecoder injects the decoder.</span></span><br><span class="line">func (<span class="selector-tag">a</span> *KubeGameAnnotator) <span class="built_in">InjectDecoder</span>(d *admission.Decoder) error &#123;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-class">.decoder</span> = d</span><br><span class="line">return nil</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// validatingwebhook.go</span></span><br><span class="line"><span class="keyword">package</span> controllers</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;context&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line">corev1 <span class="string">&quot;k8s.io/api/core/v1&quot;</span></span><br><span class="line"><span class="string">&quot;net/http&quot;</span></span><br><span class="line"><span class="string">&quot;sigs.k8s.io/controller-runtime/pkg/client&quot;</span></span><br><span class="line"><span class="string">&quot;sigs.k8s.io/controller-runtime/pkg/webhook/admission&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// +kubebuilder:webhook:admissionReviewVersions=v1,sideEffects=None,path=/validate-v1-svc,mutating=false,failurePolicy=fail,groups=&quot;&quot;,resources=services,verbs=create;update,versions=v1,name=vsvc.kb.io</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// KubeGameValidator validates Pods</span></span><br><span class="line"><span class="keyword">type</span> KubeGameValidator <span class="keyword">struct</span> &#123;</span><br><span class="line">Client  client.Client</span><br><span class="line">decoder *admission.Decoder</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Handle admits a pod if a specific annotation exists.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v *KubeGameValidator)</span></span> Handle(ctx context.Context, req admission.Request) admission.Response &#123;</span><br><span class="line">pod := &amp;corev1.Pod&#123;&#125;</span><br><span class="line"></span><br><span class="line">err := v.decoder.Decode(req, pod)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> admission.Errored(http.StatusBadRequest, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">key := <span class="string">&quot;example-mutating-admission-webhook&quot;</span></span><br><span class="line">anno, found := pod.Annotations[key]</span><br><span class="line"><span class="keyword">if</span> !found &#123;</span><br><span class="line"><span class="keyword">return</span> admission.Denied(fmt.Sprintf(<span class="string">&quot;missing annotation %s&quot;</span>, key))</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> anno != <span class="string">&quot;foo&quot;</span> &#123;</span><br><span class="line"><span class="keyword">return</span> admission.Denied(fmt.Sprintf(<span class="string">&quot;annotation %s did not have value %q&quot;</span>, key, <span class="string">&quot;foo&quot;</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> admission.Allowed(<span class="string">&quot;&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// KubeGameValidator implements admission.DecoderInjector.</span></span><br><span class="line"><span class="comment">// A decoder will be automatically injected.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// InjectDecoder injects the decoder.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v *KubeGameValidator)</span></span> InjectDecoder(d *admission.Decoder) <span class="type">error</span> &#123;</span><br><span class="line">v.decoder = d</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：因为上述逻辑需要services权限，所以我们在控制器里需要添加如下内容 //+kubebuilder:rbac:groups=“”,resources=services,verbs=get;list;watch;create;update;patch;delete 用于生成 rbac manifests。</p></blockquote><blockquote><p>Register Your Handler<br />修改 main.go ，注册我们的 webhook handler</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">setupLog<span class="selector-class">.Info</span>(&quot;setting up webhook server&quot;)</span><br><span class="line">hookServer := mgr.<span class="built_in">GetWebhookServer</span>()</span><br><span class="line"></span><br><span class="line">setupLog.<span class="built_in">Info</span>(<span class="string">&quot;registering webhooks to the webhook server&quot;</span>)</span><br><span class="line">hookServer.<span class="built_in">Register</span>(<span class="string">&quot;/mutate-v1-svc&quot;</span>, &amp;webhook.Admission&#123;Handler: &amp;controllers.KubeGameAnnotator&#123;Client: mgr.<span class="built_in">GetClient</span>()&#125;&#125;)</span><br><span class="line">hookServer<span class="selector-class">.Register</span>(&quot;/validate-v1-svc&quot;, &amp;webhook<span class="selector-class">.Admission</span>&#123;Handler: &amp;controllers.KubeGameValidator&#123;Client: mgr.<span class="built_in">GetClient</span>()&#125;&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>提示： 这里注册的path（例如 validate-v1-sv）路径需要和 validatingwebhook.go 、mutatingwebhook.go 文件里的 CRD validation 匹配，不然 kustomize 生成出来的 webhook yaml 文件不对。</p></blockquote><h1 id="本地测试"><a class="markdownIt-Anchor" href="#本地测试"></a> 本地测试</h1><p>make run 会报如下错误，是因为没有证书导致，需要配置证书，可以手动签发证书。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">1</span>.<span class="number">646924212701068</span>e+<span class="number">09</span> ERROR setup problem running manager &#123;<span class="string">&quot;error&quot;</span>: <span class="string">&quot;open /var/folders/67/375276sx6hv0nln1whwm5syh0000gq/T/k8s-webhook-server/serving-certs/tls.crt: no such file or directory&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>我本地指定证书目录：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mgr, err := ctrl.NewManager(ctrl.GetConfigOrDie(), ctrl.Options<span class="punctuation">&#123;</span></span><br><span class="line"><span class="symbol">Scheme:</span>                 scheme,</span><br><span class="line"><span class="symbol">MetricsBindAddress:</span>     metricsAddr,</span><br><span class="line"><span class="symbol">Port:</span>                   <span class="number">9443</span>,</span><br><span class="line"><span class="symbol">HealthProbeBindAddress:</span> probeAddr,</span><br><span class="line"><span class="symbol">LeaderElection:</span>         enableLeaderElection,</span><br><span class="line"><span class="symbol">LeaderElectionID:</span>       <span class="string">&quot;27e1b0af.blazehu.com&quot;</span>,</span><br><span class="line"><span class="symbol">CertDir:</span>                <span class="string">&quot;./cert/&quot;</span>,</span><br><span class="line"><span class="punctuation">&#125;</span>)</span><br></pre></td></tr></table></figure><p>重新启动发现恢复正常</p><blockquote><p>提示： run controller-gen rbac:roleName=manager-role crd webhook paths=./… output:crd:artifacts:config=config/crd/bases -w to see all available markers, or controller-gen rbac:roleName=manager-role crd webhook paths=./… output:crd:artifacts:config=config/crd/bases -h for usage</p></blockquote><h1 id="7-部署至集群"><a class="markdownIt-Anchor" href="#7-部署至集群"></a> 7. 部署至集群</h1><p>7.1 部署 cert manager<br />建议使用 certmanager 为 webhook 服务器提供证书。其他解决方案也有效，只要它们将证书放在所需的位置。安装文档点这里<br />通过如下方式注入 caBundle :</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This patch add annotation to admission webhook config and</span></span><br><span class="line"><span class="comment"># the variables $(CERTIFICATE_NAMESPACE) and $(CERTIFICATE_NAME) will be substituted by kustomize.</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">admissionregistration.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">MutatingWebhookConfiguration</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">mutating-webhook-configuration</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">cert-manager.io/inject-ca-from:</span> <span class="string">$(CERTIFICATE_NAMESPACE)/$(CERTIFICATE_NAME)</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">admissionregistration.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ValidatingWebhookConfiguration</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">validating-webhook-configuration</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">cert-manager.io/inject-ca-from:</span> <span class="string">$(CERTIFICATE_NAMESPACE)/$(CERTIFICATE_NAME)</span></span><br></pre></td></tr></table></figure><h1 id="72-构建镜像"><a class="markdownIt-Anchor" href="#72-构建镜像"></a> 7.2 构建镜像</h1><p>•镜像替换：default/manager_auth_proxy_patch.yaml 文件中的 <a href="http://gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0">gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0</a> （网络慢）<br />•Dockerfile 去掉 go mod download，直接使用本地 vendor 构建 （网络慢）<br />•Dockerfile 去掉 COPY api/ api/， 因为没有创建 Resource<br />•去掉 main.go 文件中配置的证书路径</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make docker-build <span class="attribute">IMG</span>=xxxx</span><br><span class="line">make docker-push <span class="attribute">IMG</span>=xxxx</span><br></pre></td></tr></table></figure><h1 id="73-修改模版然后部署"><a class="markdownIt-Anchor" href="#73-修改模版然后部署"></a> 7.3 修改模版，然后部署</h1><p>•修改 config/default/kustomization.yaml ， 将 webhook、certmanager 相关的注释去掉。<br />•修改 config/crd/kustomization.yaml ，将 webhook、certmanager 相关的注释去掉。<br />•修改 config/default/kustomization.yaml ， 将 crd 相关的给注释掉。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make deploy <span class="attribute">IMG</span>=xxxx</span><br></pre></td></tr></table></figure><p>部署成功：</p><p>查看控制器日志：</p><h1 id="74-测试"><a class="markdownIt-Anchor" href="#74-测试"></a> 7.4 测试</h1><p>简单创建一个 service，webhook 会注入一个注解，并进行验证。下图可以看到成功注入。</p><p>控制日志：</p><p>说明：查看 MutatingWebhookConfiguration 配置可以看到 caBundle 被注入其中了。</p><h1 id="8-总结"><a class="markdownIt-Anchor" href="#8-总结"></a> 8. 总结</h1><p>总结下 webhook Admission 的优势：</p><p>•webhook 可动态扩展 Admission 能力，满足自定义客户的需求。<br />•不需要重启 API Server，可通过创建 webhook configuration 热加载 webhook admission。</p><p>Reference documentation<br />•<a href="https://kubernetes.io/zh/docs/reference/access-authn-authz/extensible-admission-controllers">https://kubernetes.io/zh/docs/reference/access-authn-authz/extensible-admission-controllers</a><br />•<a href="https://kubernetes.io/zh/docs/tasks/tls/managing-tls-in-a-cluster/">https://kubernetes.io/zh/docs/tasks/tls/managing-tls-in-a-cluster/</a><br />•<a href="https://book.kubebuilder.io/reference/admission-webhook.html">https://book.kubebuilder.io/reference/admission-webhook.html</a><br />•<a href="https://github.com/kubernetes-sigs/controller-runtime/tree/master/examples/builtins">https://github.com/kubernetes-sigs/controller-runtime/tree/master/examples/builtins</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是准入控制&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#什么是准入控制&quot;&gt;&lt;/a&gt; 什么是准入控制?&lt;/h1&gt;
&lt;p&gt;准入控制（Admission Controller）是 Kubernetes API Server 用于拦截请求</summary>
      
    
    
    
    <category term="Kubebuilder" scheme="https://marklinglon.github.io/categories/Kubebuilder/"/>
    
    
    <category term="k8s" scheme="https://marklinglon.github.io/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>Alertmanager</title>
    <link href="https://marklinglon.github.io/2018/05/21/alertmanager/"/>
    <id>https://marklinglon.github.io/2018/05/21/alertmanager/</id>
    <published>2018-05-20T16:00:00.000Z</published>
    <updated>2023-05-29T06:31:18.338Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">global:</span></span><br><span class="line">  <span class="attr">smtp_smarthost:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">smtp_from:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">smtp_auth_username:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">smtp_auth_password:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="attr">route:</span></span><br><span class="line">  <span class="attr">route:</span></span><br><span class="line">  <span class="attr">group_by:</span> [<span class="string">&quot;alertname&quot;</span>,<span class="string">&quot;severity&quot;</span>]</span><br><span class="line">  <span class="attr">group_wait:</span> <span class="string">60s</span> <span class="comment"># 接收到告警后，多久开始发送,</span></span><br><span class="line">  <span class="attr">group_interval:</span> <span class="string">120s</span> <span class="comment"># 多个分组发送报警的间隔时间</span></span><br><span class="line">  <span class="attr">repeat_interval:</span> <span class="string">21600s</span> <span class="comment"># 每个周期报警的间隔时间，如果中间相同分组的告警有变化，走上边两个规则,如果恢复了，就不属于重复告警</span></span><br><span class="line">  <span class="attr">receiver:</span> <span class="string">devops</span></span><br><span class="line">  <span class="attr">routes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">receiver:</span> <span class="string">devops</span></span><br><span class="line">    <span class="attr">group_wait:</span> <span class="string">10s</span></span><br><span class="line">    <span class="attr">match:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">critical</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">receiver:</span> <span class="string">devops</span></span><br><span class="line">    <span class="attr">group_wait:</span> <span class="string">10s</span></span><br><span class="line">    <span class="attr">match:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">error</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">receiver:</span> <span class="string">devops</span></span><br><span class="line">    <span class="attr">group_wait:</span> <span class="string">10s</span></span><br><span class="line">    <span class="attr">match:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">warning</span></span><br><span class="line"></span><br><span class="line"><span class="attr">receivers:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&#x27;devops&#x27;</span></span><br><span class="line">  <span class="attr">webhook_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">url:</span> <span class="string">http://alertmanager-wechat:8001</span></span><br><span class="line">    <span class="attr">send_resolved:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">inhibit_rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">source_match:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">&#x27;critical&#x27;</span></span><br><span class="line">    <span class="attr">target_match:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">&#x27;critical&#x27;</span></span><br><span class="line">    <span class="attr">equal:</span> [<span class="string">&#x27;alertname&#x27;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">source_match:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">&#x27;error&#x27;</span></span><br><span class="line">    <span class="attr">target_match:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">&#x27;error&#x27;</span></span><br><span class="line">    <span class="attr">equal:</span> [<span class="string">&#x27;alertname&#x27;</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">source_match:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">&#x27;warning&#x27;</span></span><br><span class="line">    <span class="attr">target_match:</span></span><br><span class="line">      <span class="attr">severity:</span> <span class="string">&#x27;warning&#x27;</span></span><br><span class="line">    <span class="attr">equal:</span> [<span class="string">&#x27;alertname&#x27;</span>]</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=</summary>
      
    
    
    
    <category term="prometheux" scheme="https://marklinglon.github.io/categories/prometheux/"/>
    
    
    <category term="k8s" scheme="https://marklinglon.github.io/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>keypass激活码</title>
    <link href="https://marklinglon.github.io/2018/05/20/keypass/"/>
    <id>https://marklinglon.github.io/2018/05/20/keypass/</id>
    <published>2018-05-19T16:00:00.000Z</published>
    <updated>2023-05-26T05:52:47.019Z</updated>
    
    <content type="html"><![CDATA[<h2 id="激活码"><a class="markdownIt-Anchor" href="#激活码"></a> 激活码</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">1234</span>-<span class="number">5678</span>-abcd-efgh-jklm-nopq-rstu-vwxy-<span class="number">8765</span></span><br><span class="line"><span class="attribute">LWL1</span>-<span class="number">5</span>S5S-RT2S-<span class="number">23</span>HT-<span class="number">9</span>UPM-<span class="number">939</span>M-HFSS-<span class="number">5</span>GNP-FHF2</span><br><span class="line"><span class="attribute">RZ9Y</span>-<span class="number">2</span>TPK-EMHH-HUNE-HPK5-KM93-<span class="number">3</span>EGK-RET9-RTN5</span><br><span class="line"><span class="attribute">LRQP</span>-FKTM-ESEE-<span class="number">9</span>R32-EE9G-SE3M-GRKG-<span class="number">2</span>MFF-HMM3</span><br><span class="line"><span class="attribute">I5QU</span>-<span class="number">5</span>SNF-EE9S-FNRU-UUTS-MGPE-RR2G-SN5S-<span class="number">9</span>EP2</span><br><span class="line"><span class="attribute">DFOH</span>-PN29-RFFG-GS93-<span class="number">5</span>EGT-TKKP-NS5H-F52M-URU3</span><br><span class="line"><span class="attribute">MDOQ</span>-UPKM-K59F-SR3N-S3RP-MPS9-<span class="number">9</span>T2E-<span class="number">2</span>RG3-TSS3</span><br><span class="line"><span class="attribute">BOOU</span>-NT3S-UR3R-U95G-M3GK-ERHM-<span class="number">3</span>HG2-<span class="number">9</span>SKG-S3N5</span><br><span class="line"><span class="attribute">M7DM</span>-KMST-K22P-<span class="number">3229</span>-<span class="number">9</span>MG3-GK9S-PFK5-KMKU-SS55</span><br><span class="line"><span class="attribute">WKU4</span>-H3PG-URNK-HS3S-PHK9-<span class="number">5</span>R2N-MMKE-MTKR-HKE3</span><br><span class="line"><span class="attribute">ZJHL</span>-REGF-HTUS-MH2R-PNSE-KHK5-<span class="number">5</span>KM9-UP9K-NTG9</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;激活码&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#激活码&quot;&gt;&lt;/a&gt; 激活码&lt;/h2&gt;
&lt;figure class=&quot;highlight apache&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;spa</summary>
      
    
    
    
    <category term="keypass" scheme="https://marklinglon.github.io/categories/keypass/"/>
    
    
    <category term="keypass" scheme="https://marklinglon.github.io/tags/keypass/"/>
    
  </entry>
  
</feed>
